{"version":3,"sources":["components/ExpenseFilter/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","select","onChange","event","onSelectYear","target","Card","classes","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpenseList","items","length","map","expense","id","ChartBar","fillBarHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValue","dataPoints","dataPoint","console","log","TotalMax","max","ExpensesChart","ChartDataPoints","expenses","getMonth","Expenses","useState","selectYear","setSelectYear","filteredYear","filter","item","toString","selectedYear","ExpenseForm","porps","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","form","onClick","showForm","show","onSubmit","preventDefault","expenseData","Date","onSaveExpense","type","min","step","NewExpenses","setShowForm","enteredExpenseData","random","onAddExpense","App","DUMMY_EXPENSE","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"4ZAyBeA,EAtBQ,SAACC,GAOtB,OACE,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQC,MAAOF,EAAMG,OAAQC,SATT,SAAEC,GAC1BL,EAAMM,aAAaD,EAAME,OAAOL,QAQ5B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,2BCPKM,G,MATF,SAACR,GACV,IAAMS,EAAU,QAAUT,EAAMC,UAChC,OACI,qBAAKA,UAAWQ,EAAhB,SACKT,EAAMU,aCUJC,G,YAdK,SAACX,GACjB,IAAMY,EAAQZ,EAAMa,KAAKC,eAAe,QAAU,CAACF,MAAQ,SACrDG,EAAMf,EAAMa,KAAKC,eAAe,QAAS,CAACC,IAAM,YAChDC,EAAOhB,EAAMa,KAAKI,cAExB,OACI,sBAAKhB,UAAU,eAAf,UACI,qBAAKA,UAAU,sBAAf,SAAsCW,IACtC,qBAAKX,UAAU,oBAAf,SAAoCc,IACpC,qBAAKd,UAAU,qBAAf,SAAqCe,SCUlCE,G,MAhBK,SAAClB,GACjB,OACI,6BACI,eAAC,EAAD,CAAMC,UAAU,eAAhB,UACI,cAAC,EAAD,CACIY,KAAQb,EAAMa,OAElB,sBAAKZ,UAAU,4BAAf,UACI,6BAAKD,EAAMmB,QACX,sBAAKlB,UAAU,sBAAf,eAAwCD,EAAMoB,oBCWnDC,EArBK,SAAArB,GAEhB,OAAwB,IAArBA,EAAMsB,MAAMC,OAEP,oBAAItB,UAAW,0BAAf,8BAKJ,oBAAIA,UAAU,gBAAd,SACKD,EAAMsB,MAAME,KAAI,SAACC,GAAD,OAAY,cAAC,EAAD,CAEzBN,MAAOM,EAAQN,MACfC,OAAQK,EAAQL,OAChBP,KAAMY,EAAQZ,MAHTY,EAAQC,U,eCUdC,G,MAtBE,SAAA3B,GACb,IAAI4B,EAAgB,KAMpB,OAJG5B,EAAM6B,SAAW,IAChBD,EAAgBE,KAAKC,MAAO/B,EAAME,MAAMF,EAAM6B,SAAU,KAAO,KAI/D,sBAAK5B,UAAU,YAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBACIA,UAAU,kBACV+B,MAAO,CAACC,OAAQL,OAGxB,qBAAK3B,UAAU,mBAAf,SACKD,EAAMkC,aCKRC,G,MAnBD,SAAAnC,GACV,IAAMoC,EAAkBpC,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAAGA,EAAUpC,SACnEqC,QAAQC,IAAIJ,GACZ,IAAMK,EAAWX,KAAKY,IAAL,MAAAZ,KAAI,YAAQM,IAE7B,OADAG,QAAQC,IAAIC,GAER,qBAAKxC,UAAU,QAAf,SACKD,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAC3B,cAAC,EAAD,CAEIpC,MAAOoC,EAAUpC,MACjB2B,SAAUY,EACVP,MAASI,EAAUJ,OAHdI,EAAUJ,cCmBpBS,EA7BO,SAAA3C,GAClB,IAD2B,EACrB4C,EAAkB,CACpB,CAAEV,MAAQ,MAAQhC,MAAQ,GAC1B,CAAEgC,MAAQ,MAAQhC,MAAQ,GAC1B,CAAEgC,MAAQ,MAAQhC,MAAQ,GAC1B,CAAEgC,MAAQ,MAAQhC,MAAQ,GAC1B,CAAEgC,MAAQ,MAAQhC,MAAQ,GAC1B,CAAEgC,MAAQ,MAAQhC,MAAQ,GAC1B,CAAEgC,MAAQ,MAAQhC,MAAQ,GAC1B,CAAEgC,MAAQ,MAAQhC,MAAQ,GAC1B,CAAEgC,MAAQ,OAAShC,MAAQ,GAC3B,CAAEgC,MAAQ,MAAQhC,MAAQ,GAC1B,CAAEgC,MAAQ,MAAQhC,MAAQ,GAC1B,CAAEgC,MAAQ,MAAQhC,MAAQ,IAbH,cAgBJF,EAAM6C,UAhBF,IAgB3B,2BAAsC,CAAC,IAA3BpB,EAA0B,QAGlCmB,EAFqBnB,EAAQZ,KAAKiC,YAEJ5C,OAAOuB,EAAQL,QAnBtB,8BAsB3B,OACI,cAAC,EAAD,CACIiB,WAAcO,KCmBXG,EAxCE,SAAC/C,GACd,MAAmCgD,mBAAS,QAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAenD,EAAMsB,MAAM8B,QAAO,SAACC,GACrC,OAAQA,EAAKxC,KAAKI,cAAcqC,aAAaL,KAGjD,OACI,eAAC,EAAD,CAAMhD,UAAU,WAAhB,UACI,cAAC,EAAD,CAAgBE,OAAQ8C,EAAY3C,aAVlB,SAACiD,GACvBL,EAAcK,MAUV,gCAeI,cAAC,EAAD,CACIV,SAAUM,IAEd,cAAC,EAAD,CACI7B,MAAQ6B,W,OCsEbK,G,YA3GK,SAACC,GAMjB,MAAuCT,mBAAS,IAAhD,mBAAOU,EAAP,KAAoBC,EAApB,KACA,EAAyCX,mBAAS,IAAlD,mBAAOY,EAAP,KAAqBC,EAArB,KACA,EAAqCb,mBAAS,IAA9C,mBAAOc,EAAP,KAAmBC,EAAnB,KAiDIC,EAAW,qBAAK/D,UAAU,uBAAf,SACK,wBAAQgE,QATL,WACnBR,EAAMS,UAAS,IAQC,2BA0CpB,OAvCGT,EAAMU,OACLH,EAAQ,uBAAMI,SA/BI,SAAC/D,GACnBA,EAAMgE,iBAEN,IAAMC,EAAc,CAChBnD,MAAQuC,EACRtC,QAAUwC,EACV/C,KAAO,IAAI0D,KAAKT,IAIpBL,EAAMe,cAAcF,GACpBX,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,IACfN,EAAMS,UAAS,IAiBP,UACR,sBAAKjE,UAAU,wBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,0CACA,uBACIwE,KAAK,OACLvE,MAAOwD,EACPtD,SA3DY,SAACC,GACzBsD,EAAgBtD,EAAME,OAAOL,aA6DzB,sBAAKD,UAAU,uBAAf,UACI,2CACA,uBACIwE,KAAK,SACLC,IAAI,OACJC,KAAK,OACLzE,MAAQ0D,EACRxD,SA9Da,SAACC,GAC1BwD,EAAiBxD,EAAME,OAAOL,aAgE1B,sBAAKD,UAAU,uBAAf,UACI,yCACA,uBACIwE,KAAK,OACLC,IAAI,aACJhC,IAAI,aACJxC,MAAO4D,EACP1D,SAjEW,SAACC,GACxB0D,EAAe1D,EAAME,OAAOL,gBAoE5B,sBAAKD,UAAU,uBAAf,UACI,wBAAQgE,QAzCQ,WACpBR,EAAMS,UAAS,IAwCX,oBACA,wBAAQO,KAAK,SAAb,gCAMJ,8BACKT,MC3EEY,EA3BK,SAAC5E,GAEjB,IAQA,EAAgCgD,oBAAS,GAAzC,mBAAOkB,EAAP,KAAiBW,EAAjB,KAMA,OACI,qBAAK5E,UAAU,cAAf,SACI,cAAC,EAAD,CACIuE,cAjBe,SAACM,GACxB,IAAMR,EAAW,2BACVQ,GADU,IAEbpD,GAAKI,KAAKiD,SAASzB,aAEvBtD,EAAMgF,aAAaV,IAaXH,KAAQD,EACRA,SATY,SAAChE,GACrB2E,EAAY3E,SCkCL+E,EA/CH,WACV,IAAMC,EAAgB,CACpB,CAEExD,GAAI,KACJP,MAAO,QACPC,OAAQ,MACRP,KAAM,IAAI0D,KAAK,KAAM,EAAG,KAE1B,CAAE7C,GAAI,KAAMP,MAAO,SAAUC,OAAQ,MAAOP,KAAM,IAAI0D,KAAK,KAAM,EAAG,KACpE,CACE7C,GAAI,KACJP,MAAO,gBACPC,OAAQ,MACRP,KAAM,IAAI0D,KAAK,KAAM,EAAG,KAE1B,CACE7C,GAAI,KACJP,MAAO,oBACPC,OAAQ,GACRP,KAAM,IAAI0D,KAAK,KAAM,EAAG,KAE1B,CAAE7C,GAAI,KAAMP,MAAO,QAASC,OAAQ,MAAOP,KAAM,IAAI0D,KAAK,KAAM,EAAG,KACnE,CAAE7C,GAAI,KAAMP,MAAO,UAAWC,OAAQ,KAAMP,KAAM,IAAI0D,KAAK,KAAM,EAAG,IACpE,CAAE7C,GAAI,KAAMP,MAAO,KAAMC,OAAQ,OAAQP,KAAM,IAAI0D,KAAK,KAAM,EAAG,KACjE,CAAE7C,GAAI,KAAMP,MAAO,UAAWC,OAAQ,MAAOP,KAAM,IAAI0D,KAAK,KAAM,EAAG,KAGvE,EAA6BvB,mBAASkC,GAAtC,mBAAOrC,EAAP,KAAgBsC,EAAhB,KASA,OACE,gCACE,cAAC,EAAD,CAAaH,aATS,SAACvD,GAGzB0D,GAAY,SAACC,GACX,MAAM,CAAE3D,GAAR,mBAAmB2D,UAMnB,cAAC,EAAD,CACE9D,MAAOuB,QCvCfwC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7a0c1ffb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const selectYearHandler = ( event) => {\r\n    props.onSelectYear(event.target.value);\r\n    // console.log(selectedYear);\r\n  }\r\n  \r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.select} onChange={selectYearHandler}  >\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './Card.css'\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className={classes}>  \r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import './ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US' , {month : 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day : '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate \r\n                    date = {props.date}\r\n                    />    \r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">$ {props.amount}</div>\r\n                </div>\r\n            </Card>  \r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from \"react\"\r\nimport './ExpenseList.css'\r\nimport ExpenseItem from \"./ExpenseItem\"\r\n\r\nconst ExpenseList = props =>{\r\n\r\n    if(props.items.length===0){\r\n        return (\r\n            <h2 className= \"expenses-list__fallback\">Found No Expense</h2>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map((expense)=> <ExpenseItem \r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n            /> )}\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nexport default ExpenseList","import React from \"react\";\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = props =>{\r\n    let fillBarHeight = '0%';\r\n\r\n    if(props.maxValue > 0){\r\n        fillBarHeight = Math.round((props.value/props.maxValue)*100) + '%';\r\n    }\r\n\r\n    return(\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div \r\n                    className=\"chart-bar__fill\" \r\n                    style={{height: fillBarHeight}}>\r\n                </div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">\r\n                {props.label}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nimport './Chart.css';\r\n\r\nconst Chart = props =>{\r\n    const dataPointsValue = props.dataPoints.map(dataPoint=> dataPoint.value);\r\n    console.log(dataPointsValue);\r\n    const TotalMax = Math.max(...dataPointsValue);\r\n    console.log(TotalMax);\r\n    return(\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint =>( \r\n                <ChartBar \r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={TotalMax}\r\n                    label = {dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Chart","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\n\r\nconst ExpensesChart = props => {\r\n    const ChartDataPoints = [ \r\n        { label : 'Jan' , value : 0 },\r\n        { label : 'Feb' , value : 0 },\r\n        { label : 'Mar' , value : 0 },\r\n        { label : 'Apr' , value : 0 },\r\n        { label : 'May' , value : 0 },\r\n        { label : 'Jun' , value : 0 },\r\n        { label : 'Jul' , value : 0 },\r\n        { label : 'Aug' , value : 0 },\r\n        { label : 'Sept' , value : 0 },\r\n        { label : 'Oct' , value : 0 },\r\n        { label : 'Nov' , value : 0 },\r\n        { label : 'Dec' , value : 0 }\r\n    ];\r\n\r\n    for ( const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        // console.log(expenseMonth);\r\n        ChartDataPoints[expenseMonth].value+=expense.amount;\r\n    }\r\n\r\n    return (\r\n        <Chart \r\n            dataPoints = {ChartDataPoints}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ExpensesChart;","import { useState } from \"react\";\r\nimport ExpensesFilter from \"../ExpenseFilter/ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport './Expenses.css'\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n    const [selectYear,setSelectYear] = useState('2020');\r\n    \r\n    const selectYearHandler = (selectedYear) =>{\r\n        setSelectYear(selectedYear);\r\n    }\r\n\r\n    const filteredYear = props.items.filter((item)=> { \r\n        return (item.date.getFullYear().toString()===selectYear)\r\n    })\r\n\r\n    return(\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter select={selectYear} onSelectYear={selectYearHandler}/>\r\n            <div>\r\n                {/* {filteredYear.length===0 ? (<p>No Expense Item</p>):(filteredYear.map((expense)=> <ExpenseItem \r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                /> ))} */}\r\n                {/* {filteredYear.length===0 && (<p>No Expense Item</p>)}\r\n                {filteredYear.length>0 && (filteredYear.map((expense)=> <ExpenseItem \r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                /> ))} */}\r\n\r\n                <ExpensesChart \r\n                    expenses={filteredYear}\r\n                />\r\n                <ExpenseList\r\n                    items ={filteredYear} \r\n                    />\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (porps) => {\r\n    // const [userInput , setUserInput] = useState({\r\n    //     enteredTitle : '',\r\n    //     enteredAmount : '',\r\n    //     enteredDate : ''\r\n    // });\r\n    const [enteredTitle,setEnteredTitle] = useState('');\r\n    const [enteredAmount,setEnteredAmount] = useState('');\r\n    const [enteredDate,setEnteredDate] = useState('');\r\n\r\n    const titleChangedHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        // setUserInput((prevState)=>{\r\n        //     return {...prevState,enteredTitle : event.target.value}\r\n        // })\r\n    }\r\n\r\n    const amountChangedHandler = (event) =>{\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInput((prevState)=>{\r\n        //     return {...prevState , enteredAmount: event.target.value}\r\n        // })\r\n    }\r\n\r\n    const dateChangedHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState , enteredDate : event.target.value}\r\n        // })\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title : enteredTitle,\r\n            amount : +enteredAmount,\r\n            date : new Date(enteredDate)\r\n        };\r\n\r\n        // console.log(expenseDate);\r\n        porps.onSaveExpense(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n        porps.showForm(false);\r\n\r\n    };\r\n\r\n    const showFormHandler =()=>{\r\n        porps.showForm(true);\r\n    }\r\n\r\n    const hideFormHandler = () =>{\r\n        porps.showForm(false);\r\n    }\r\n\r\n    let form =    (<div className=\"new-expense__control\">\r\n                        <button onClick={showFormHandler}>Add Expense</button>\r\n                    </div>)\r\n\r\n    if(porps.show){\r\n        form = (<form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input \r\n                    type=\"text\" \r\n                    value={enteredTitle}\r\n                    onChange={titleChangedHandler} \r\n                    />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input \r\n                    type=\"number\" \r\n                    min=\"0.01\" \r\n                    step=\"0.01\" \r\n                    value= {enteredAmount}\r\n                    onChange={amountChangedHandler}\r\n                    />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input \r\n                    type=\"date\" \r\n                    min=\"2019-01-01\" \r\n                    max=\"2022-12-31\" \r\n                    value={enteredDate}\r\n                    onChange={dateChangedHandler} \r\n                    />\r\n            </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <button onClick={hideFormHandler}>Cancel</button>\r\n            <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n    </form>)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {form}\r\n        </div>     \r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import React, { useState } from \"react\";\r\nimport './NewExpenses.css'\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nconst NewExpenses = (props) =>{\r\n\r\n    const saveExpenseHandler = (enteredExpenseData) =>{\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id : Math.random().toString()\r\n        }\r\n        props.onAddExpense(expenseData);\r\n    }\r\n\r\n    const [showForm, setShowForm] = useState(false);\r\n\r\n    const showFormHandler = (value) => {\r\n        setShowForm(value);\r\n    }\r\n\r\n    return(\r\n        <div className=\"new-expense\">\r\n            <ExpenseForm \r\n                onSaveExpense={saveExpenseHandler}\r\n                show = {showForm}\r\n                showForm={showFormHandler}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpenses;","import React, {useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpenses from \"./components/NewExpenses/NewExpenses\";\nconst App = () => {\n  const DUMMY_EXPENSE = [\n    {\n      \n      id: 'e1',\n      title: 'BOOKS',\n      amount: 34.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', title: 'New TV', amount: 82.49, date: new Date(2020, 9, 12) },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 74.67,\n      date: new Date(2020, 1, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 50,\n      date: new Date(2020, 5, 12),\n    },\n    { id: 'e5', title: 'Watch', amount: 50.49, date: new Date(2020, 0, 21) },\n    { id: 'e6', title: 'Bottler', amount: 9.49, date: new Date(2021, 7, 2) },\n    { id: 'e7', title: 'AC', amount: 150.49, date: new Date(2021, 2, 11) },\n    { id: 'e8', title: 'Carpets', amount: 79.49, date: new Date(2020, 4, 3) },\n  ];\n\n  const [expenses,setExpenses]=useState(DUMMY_EXPENSE);\n\n  const addExpenseHandler = (expense) => {\n    // console.log(\"In App.js\");\n    // console.log(expense);\n    setExpenses((prevExpenses)=>{\n      return([expense,...prevExpenses]);\n    })\n  }\n  return (\n    <div>\n      <NewExpenses onAddExpense={addExpenseHandler}/>\n      <Expenses\n        items={expenses}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}